% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runPCA.R
\name{runPCA.chan}
\alias{runPCA.chan}
\title{Principal components analysis}
\usage{
runPCA.chan(
  x,
  num.comp = 50,
  subset = NULL,
  num.threads = 1,
  batch = NULL,
  batch.method = c("block", "weight")
)
}
\arguments{
\item{x}{A list containing a log-expression matrix like that produced by \code{\link{logNormCounts.chan}}.}

\item{num.comp}{Integer scalar specifying the number of top PCs to obtain.}

\item{subset}{Logical vector specifying which features to use in the PCA (e.g., highly variable genes).
If \code{NULL}, all features in \code{x} are used.}

\item{num.threads}{Integer scalar specifying the number of threads to use.}
}
\value{
List containing \code{components}, containing the top principal components;
and \code{prop.variance}, containing the proportion of variance explained by each component.
}
\description{
Perform an approximate principal components analysis using IRLBA.
}
\examples{
library(Matrix)
x <- round(abs(rsparsematrix(1000, 100, 0.1) * 100))
y <- initializeSparseMatrix(x)
normed <- logNormCounts.chan(y)

pcs <- runPCA.chan(normed)
barplot(pcs$prop.variance)

# Handling batch effects by blocking (i.e., regression)
# or by weighting to equalize contributions. 
b <- sample(1:3, ncol(x), replace=TRUE)
blocked <- runPCA.chan(normed, bl

}
\author{
Aaron Lun
}
