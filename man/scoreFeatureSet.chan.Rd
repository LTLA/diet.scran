% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scoreFeatureSet.R
\name{scoreFeatureSet.chan}
\alias{scoreFeatureSet.chan}
\title{Score feature set activity for each cell}
\usage{
scoreFeatureSet.chan(x, features, batch = NULL, scale = FALSE, num.threads = 1)
}
\arguments{
\item{x}{A list containing a log-expression matrix like that produced by \code{\link{logNormCounts.chan}}.}

\item{features}{Integer, logical or character vector specifying the features that belong to the set.}

\item{batch}{Vector or factor of length equal to the number of cells, specifying the batch of origin for each cell.
Alternatively \code{NULL} if all cells belong to the same batch.}

\item{scale}{Logical scalar indicating whether to scale rows to unit variance within each batch before computing the weighting vectors.}

\item{num.threads}{Number of threads to use.}
}
\value{
List containing \code{scores}, a numeric vector of per-cell scores for each column in \code{x};
and \code{weights}, a numeric vector of per-feature weights for each feature in \code{features} (ordered by their row indices in \code{x}).
}
\description{
Compute per-cell scores for a given feature set, defined as the column sums of a rank-1 approximation to the submatrix for the feature set.
This uses the same approach implemented in the \pkg{GSDecon} package from Jason Hackney.
}
\examples{
library(Matrix)
x <- round(abs(rsparsematrix(1000, 100, 0.1) * 100))
y <- initializeSparseMatrix(x)
normed <- logNormCounts.chan(y)

scoreFeatureSet.chan(normed, c(1,3,5,10,20,100))

}
\author{
Aaron Lun
}
