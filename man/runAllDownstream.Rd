% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runAllDownstream.R
\name{runAllDownstream}
\alias{runAllDownstream}
\title{Run all downstream steps}
\usage{
runAllDownstream(
  x,
  do.tsne = TRUE,
  do.umap = TRUE,
  do.cluster.snn = TRUE,
  do.cluster.kmeans = FALSE,
  tsne.perplexity = 30,
  umap.num.neighbors = 15,
  cluster.snn.num.neighbors = 10,
  cluster.snn.method = c("multilevel", "leiden", "walktrap"),
  cluster.snn.resolution = NULL,
  cluster.kmeans.k = 10,
  num.threads = 1
)
}
\arguments{
\item{x}{Numeric matrix containing dimensions in the rows and cells in the columns.
This is typically a matrix of principal components.}

\item{do.tsne}{Logical scalar, should we perform a t-SNE?}

\item{do.umap}{Logical scalar, should we perform a UMAP?}

\item{do.cluster.snn}{Logical scalar, should we perform graph-based clustering?}

\item{do.cluster.kmeans}{Logical scalar, should we perform k-means clustering?}

\item{tsne.perplexity}{Parameters to be used for t-SNE, see \code{\link{runTSNE.chan}} for details.}

\item{umap.num.neighbors}{Parameters to be used for UMAP, see \code{\link{runUMAP.chan}} for details.}

\item{cluster.snn.num.neighbors, cluster.snn.resolution}{Parameters to be used for graph-based clustering, see \code{\link{clusterSNNGraph.chan}} for details.}

\item{cluster.kmeans.k}{Parameters to be used for k-means clustering, see \code{\link{clusterKmeans.chan}} for details.}

\item{num.threads}{Integer scalar specifying the number of threads to use.}
}
\value{
A list containing \code{"cluster.snn"}, \code{"umap"} and \code{"tsne"},
each of which contains the result of their respective function \code{*.chan} functions.
}
\description{
Run all steps in the basic workflow that are downstream of PCA (but before marker detection).
}
\details{
By running all of these steps together, we can avoid redundant construction of the nearest neighbor index.
We can also execute some of the single-threaded steps concurrently for further time savings.

It is tempting to re-use the nearest neighbor search results across the different steps,
subsetting to the number of neighbors required in each step.
However, we do not do so as the approximate nature of the search means that the subsetting may not yield the same results as a direct search for the requested number of neighbors.
This can lead to inconsistent behavior where the results of one step depend on whether other steps were run.
}
\examples{
x <- t(as.matrix(iris[,1:4]))
res <- runAllDownstream(x)
str(res)
}
\author{
Aaron Lun
}
